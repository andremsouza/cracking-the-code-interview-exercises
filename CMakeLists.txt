cmake_minimum_required(VERSION 3.0.0)
project(cracking-the-code-interview-exercises VERSION 0.1.0)

add_compile_options(-Wall -Wextra -Wshadow -Wnon-virtual-dtor -pedantic)

set(CMAKE_CXX_STANDARD 20)
set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)

include(CTest)
enable_testing()

include_directories(${CMAKE_SOURCE_DIR}/*)
include_directories(${CMAKE_SOURCE_DIR}/*/*)

# Add executables from each exercise
file( GLOB APP_SOURCES */*/*.cpp )
foreach( testsourcefile ${APP_SOURCES})
    string(REGEX REPLACE "[^/]+$" "" testdirectory ${testsourcefile})
    string(REGEX MATCH "[^/]+/[^/]+/main.cpp$" exercise_name ${testsourcefile})
    string(REPLACE "/" "_" exercise_name ${exercise_name})
    string(REPLACE "main.cpp" "" exercise_name ${exercise_name})
    string(REGEX REPLACE "_$" "" exercise_name ${exercise_name})
    message("exercise_name: " ${exercise_name})
    add_executable(${exercise_name} ${testsourcefile})
    target_link_libraries(${exercise_name})
    # Add tests for each exercise
    file( GLOB TEST_INPUTS ${testdirectory}*.in)
    foreach( testinputfile ${TEST_INPUTS})
        string(REGEX MATCH "[^/]+$" testinputfilename ${testinputfile})
        string(REGEX REPLACE ".in$" ".out" testoutputfile ${testinputfile})
        string(REGEX MATCH "[^/]+$" testoutputfilename ${testoutputfile})
        if (EXISTS ${testoutputfile})
            file(STRINGS ${testinputfile} input)
            file(READ ${testoutputfile} output)
            add_test(NAME ${exercise_name}_${testinputfilename} COMMAND ${exercise_name} ${input} COMMAND_EXPAND_LISTS)
            set_property(TEST ${exercise_name}_${testinputfilename} PROPERTY LABELS ${exercise_name})
            set_property(TEST ${exercise_name}_${testinputfilename} PROPERTY PASS_REGULAR_EXPRESSION "${output}")
            message("Test: " ${exercise_name}_${testinputfilename} "->" ${testoutputfile})
        endif()
    endforeach(testinputfile ${TEST_INPUTS})
endforeach( testsourcefile ${APP_SOURCES})
